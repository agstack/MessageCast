# Generated by Django 3.2 on 2022-12-11 02:02

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone', models.CharField(max_length=255, verbose_name='phone')),
                ('usage', models.CharField(choices=[('c', 'commercial'), ('r', 'research'), ('e', 'educational'), ('g', 'government')], max_length=255, verbose_name='usage')),
                ('ip', models.CharField(blank=True, max_length=255, null=True, verbose_name='ip')),
                ('region', models.CharField(blank=True, max_length=255, null=True, verbose_name='region')),
                ('city', models.CharField(blank=True, max_length=255, null=True, verbose_name='city')),
                ('country', models.CharField(blank=True, default='USA', max_length=255, null=True, verbose_name='country')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('latitude', models.CharField(blank=True, max_length=255, null=True, verbose_name='latitude')),
                ('longitude', models.CharField(blank=True, max_length=255, null=True, verbose_name='longitude')),
                ('h3_index', models.CharField(blank=True, max_length=255, null=True, verbose_name='h3_index')),
                ('h3_resolution', models.CharField(default=12, max_length=255, verbose_name='h3_resolution')),
                ('s2_index', models.CharField(blank=True, max_length=255, null=True, verbose_name='s2_index')),
                ('s2_level', models.CharField(default=20, max_length=255, verbose_name='s2_level')),
                ('discoverable', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='APIProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
                ('about', models.CharField(max_length=255, verbose_name='about')),
                ('logo', models.FileField(blank=True, null=True, upload_to='')),
                ('active', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('subscribers', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL, verbose_name='subscribers')),
            ],
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('token', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='uuid')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.BooleanField(default=False)),
                ('name', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='name')),
                ('latitude', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='latitude')),
                ('longitude', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='longitude')),
                ('api_product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.apiproduct')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
